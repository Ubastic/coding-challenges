{"medium": [{"id": 1216, "slug": "print-zero-even-odd", "title": "Print Zero Even Odd", "difficulty": "medium"}, {"id": 518, "slug": "coin-change-2", "title": "Coin Change 2", "difficulty": "medium"}, {"id": 406, "slug": "queue-reconstruction-by-height", "title": "Queue Reconstruction by Height", "difficulty": "medium"}, {"id": 238, "slug": "product-of-array-except-self", "title": "Product of Array Except Self", "difficulty": "medium"}, {"id": 236, "slug": "lowest-common-ancestor-of-a-binary-tree", "title": "Lowest Common Ancestor of a Binary Tree", "difficulty": "medium"}, {"id": 165, "slug": "compare-version-numbers", "title": "Compare Version Numbers", "difficulty": "medium"}, {"id": 146, "slug": "lru-cache", "title": "LRU Cache", "difficulty": "medium"}, {"id": 144, "slug": "binary-tree-preorder-traversal", "title": "Binary Tree Preorder Traversal", "difficulty": "medium"}, {"id": 117, "slug": "populating-next-right-pointers-in-each-node-ii", "title": "Populating Next Right Pointers in Each Node II", "difficulty": "medium"}, {"id": 116, "slug": "populating-next-right-pointers-in-each-node", "title": "Populating Next Right Pointers in Each Node", "difficulty": "medium"}, {"id": 106, "slug": "construct-binary-tree-from-inorder-and-postorder-traversal", "title": "Construct Binary Tree from Inorder and Postorder Traversal", "difficulty": "medium"}, {"id": 105, "slug": "construct-binary-tree-from-preorder-and-inorder-traversal", "title": "Construct Binary Tree from Preorder and Inorder Traversal", "difficulty": "medium"}, {"id": 102, "slug": "binary-tree-level-order-traversal", "title": "Binary Tree Level Order Traversal", "difficulty": "medium"}, {"id": 98, "slug": "validate-binary-search-tree", "title": "Validate Binary Search Tree", "difficulty": "medium"}, {"id": 94, "slug": "binary-tree-inorder-traversal", "title": "Binary Tree Inorder Traversal", "difficulty": "medium"}, {"id": 75, "slug": "sort-colors", "title": "Sort Colors", "difficulty": "medium"}, {"id": 50, "slug": "powx-n", "title": "Pow(x, n)", "difficulty": "medium"}, {"id": 48, "slug": "rotate-image", "title": "Rotate Image", "difficulty": "medium"}, {"id": 36, "slug": "valid-sudoku", "title": "Valid Sudoku", "difficulty": "medium"}, {"id": 8, "slug": "string-to-integer-atoi", "title": "String to Integer (atoi)", "difficulty": "medium"}, {"id": 3, "slug": "longest-substring-without-repeating-characters", "title": "Longest Substring Without Repeating Characters", "difficulty": "medium"}, {"id": 2, "slug": "add-two-numbers", "title": "Add Two Numbers", "difficulty": "medium"}], "easy": [{"id": 1203, "slug": "print-in-order", "title": "Print in Order", "difficulty": "easy"}, {"id": 1095, "slug": "two-city-scheduling", "title": "Two City Scheduling", "difficulty": "easy"}, {"id": 392, "slug": "is-subsequence", "title": "Is Subsequence", "difficulty": "easy"}, {"id": 387, "slug": "first-unique-character-in-a-string", "title": "First Unique Character in a String", "difficulty": "easy"}, {"id": 350, "slug": "intersection-of-two-arrays-ii", "title": "Intersection of Two Arrays II", "difficulty": "easy"}, {"id": 344, "slug": "reverse-string", "title": "Reverse String", "difficulty": "easy"}, {"id": 283, "slug": "move-zeroes", "title": "Move Zeroes", "difficulty": "easy"}, {"id": 242, "slug": "valid-anagram", "title": "Valid Anagram", "difficulty": "easy"}, {"id": 237, "slug": "delete-node-in-a-linked-list", "title": "Delete Node in a Linked List", "difficulty": "easy"}, {"id": 231, "slug": "power-of-two", "title": "Power of Two", "difficulty": "easy"}, {"id": 226, "slug": "invert-binary-tree", "title": "Invert Binary Tree", "difficulty": "easy"}, {"id": 217, "slug": "contains-duplicate", "title": "Contains Duplicate", "difficulty": "easy"}, {"id": 190, "slug": "reverse-bits", "title": "Reverse Bits", "difficulty": "easy"}, {"id": 189, "slug": "rotate-array", "title": "Rotate Array", "difficulty": "easy"}, {"id": 136, "slug": "single-number", "title": "Single Number", "difficulty": "easy"}, {"id": 125, "slug": "valid-palindrome", "title": "Valid Palindrome", "difficulty": "easy"}, {"id": 121, "slug": "best-time-to-buy-and-sell-stock", "title": "Best Time to Buy and Sell Stock", "difficulty": "easy"}, {"id": 112, "slug": "path-sum", "title": "Path Sum", "difficulty": "easy"}, {"id": 104, "slug": "maximum-depth-of-binary-tree", "title": "Maximum Depth of Binary Tree", "difficulty": "easy"}, {"id": 101, "slug": "symmetric-tree", "title": "Symmetric Tree", "difficulty": "easy"}, {"id": 66, "slug": "plus-one", "title": "Plus One", "difficulty": "easy"}, {"id": 35, "slug": "search-insert-position", "title": "Search Insert Position", "difficulty": "easy"}, {"id": 28, "slug": "implement-strstr", "title": "Implement strStr()", "difficulty": "easy"}, {"id": 26, "slug": "remove-duplicates-from-sorted-array", "title": "Remove Duplicates from Sorted Array", "difficulty": "easy"}, {"id": 21, "slug": "merge-two-sorted-lists", "title": "Merge Two Sorted Lists", "difficulty": "easy"}, {"id": 14, "slug": "longest-common-prefix", "title": "Longest Common Prefix", "difficulty": "easy"}, {"id": 13, "slug": "roman-to-integer", "title": "Roman to Integer", "difficulty": "easy"}, {"id": 9, "slug": "palindrome-number", "title": "Palindrome Number", "difficulty": "easy"}, {"id": 7, "slug": "reverse-integer", "title": "Reverse Integer", "difficulty": "easy"}, {"id": 1, "slug": "two-sum", "title": "Two Sum", "difficulty": "easy"}], "hard": [{"id": 297, "slug": "serialize-and-deserialize-binary-tree", "title": "Serialize and Deserialize Binary Tree", "difficulty": "hard"}, {"id": 145, "slug": "binary-tree-postorder-traversal", "title": "Binary Tree Postorder Traversal", "difficulty": "hard"}, {"id": 23, "slug": "merge-k-sorted-lists", "title": "Merge k Sorted Lists", "difficulty": "hard"}, {"id": 4, "slug": "median-of-two-sorted-arrays", "title": "Median of Two Sorted Arrays", "difficulty": "hard"}]}